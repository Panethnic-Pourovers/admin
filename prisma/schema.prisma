generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Book {
  id             String         @id @default(cuid())
  barcodeId      String         @unique @default(cuid())
  title          String
  author         String
  checkedOut     Boolean        @default(false)
  member         LibraryMember? @relation("BookToLibraryMember", fields: [libraryMemberId], references: [id])
  lastCheckedOut DateTime
  location       Location       @relation(fields: [locationId], references: [id])
  genres         Genre[]
  regions        Region[]

  locationId      String
  libraryMemberId String?
  Checkout        Checkout[]

  @@index([locationId], map: "Book_locationId_fkey")
}

model Genre {
  id     String  @id @default(cuid())
  name   String
  bookId String?
  Book   Book?   @relation(fields: [bookId], references: [id])

  @@index([bookId], map: "Genre_bookId_fkey")
}

model Region {
  id     String  @id @default(cuid())
  name   String
  bookId String?
  Book   Book?   @relation(fields: [bookId], references: [id])

  @@index([bookId], map: "Region_bookId_fkey")
}

model Location {
  id   String @id @default(cuid())
  name String
  Book Book[]
}

model LibraryMember {
  id         String     @id @default(cuid())
  firstName  String
  lastName   String
  email      String
  phone      String?
  history    String
  checkedOut Book[]     @relation("BookToLibraryMember")
  Checkout   Checkout[]
}

model Checkout {
  id           String        @id @default(cuid())
  book         Book          @relation(fields: [bookId], references: [id])
  member       LibraryMember @relation(fields: [memberId], references: [id])
  memberId     String
  bookId       String
  checkoutDate DateTime
  dueDate      DateTime
  checkinDate  DateTime?

  @@unique([memberId, bookId, checkinDate])
}
